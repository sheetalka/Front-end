{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ProcessBubbleType_1 = require(\"../../Enums/ProcessBubbleType\");\n\nvar Utils_1 = require(\"../Utils/Utils\");\n\nvar HoverMode_1 = require(\"../../Enums/Modes/HoverMode\");\n\nvar ClickMode_1 = require(\"../../Enums/Modes/ClickMode\");\n\nvar Constants_1 = require(\"../Utils/Constants\");\n\nvar Bubbler = function () {\n  function Bubbler(container, particle) {\n    this.container = container;\n    this.particle = particle;\n  }\n\n  Bubbler.prototype.bubble = function () {\n    var container = this.container;\n    var options = container.options;\n    var hoverEnabled = options.interactivity.events.onHover.enable;\n    var hoverMode = options.interactivity.events.onHover.mode;\n    var clickEnabled = options.interactivity.events.onClick.enable;\n    var clickMode = options.interactivity.events.onClick.mode;\n\n    if (hoverEnabled && Utils_1.Utils.isInArray(HoverMode_1.HoverMode.bubble, hoverMode)) {\n      this.hoverBubble();\n    } else if (clickEnabled && Utils_1.Utils.isInArray(ClickMode_1.ClickMode.bubble, clickMode)) {\n      this.clickBubble();\n    }\n  };\n\n  Bubbler.prototype.init = function () {\n    var particle = this.particle;\n    this.opacity = particle.opacity.value;\n    this.radius = particle.radius;\n  };\n\n  Bubbler.prototype.process = function (distMouse, timeSpent, data) {\n    var container = this.container;\n    var options = container.options;\n    var bubbleDuration = options.interactivity.modes.bubble.duration;\n    var bubbleParam = data.bubbleObj.optValue;\n    var bubbleDistance = container.retina.bubbleModeDistance;\n    var particlesParam = data.particlesObj.optValue;\n    var pObjBubble = data.bubbleObj.value;\n    var pObj = data.particlesObj.value || 0;\n    var type = data.type;\n\n    if (bubbleParam !== particlesParam) {\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n          if (obj !== bubbleParam) {\n            var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n            if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n              this.radius = value;\n            }\n\n            if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n              this.opacity = value;\n            }\n          }\n        } else {\n          if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n            this.radius = undefined;\n          }\n\n          if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n            this.opacity = undefined;\n          }\n        }\n      } else if (pObjBubble) {\n        var value = bubbleParam * 2 - pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n        if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n          this.radius = value;\n        }\n\n        if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n          this.opacity = value;\n        }\n      }\n    }\n  };\n\n  Bubbler.prototype.clickBubble = function () {\n    var container = this.container;\n    var options = container.options;\n    var particle = this.particle;\n    var mouseClickPos = container.interactivity.mouse.clickPosition || {\n      x: 0,\n      y: 0\n    };\n    var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mouseClickPos);\n    var timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n    if (container.bubble.clicking) {\n      if (timeSpent > options.interactivity.modes.bubble.duration) {\n        container.bubble.durationEnd = true;\n      }\n\n      if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n        container.bubble.clicking = false;\n        container.bubble.durationEnd = false;\n      }\n\n      var sizeData = {\n        bubbleObj: {\n          optValue: container.retina.bubbleModeSize,\n          value: this.radius\n        },\n        particlesObj: {\n          optValue: container.retina.sizeValue,\n          value: this.particle.radius\n        },\n        type: ProcessBubbleType_1.ProcessBubbleType.size\n      };\n      this.process(distMouse, timeSpent, sizeData);\n      var opacityData = {\n        bubbleObj: {\n          optValue: options.interactivity.modes.bubble.opacity,\n          value: this.opacity\n        },\n        particlesObj: {\n          optValue: options.particles.opacity.value,\n          value: this.particle.opacity.value\n        },\n        type: ProcessBubbleType_1.ProcessBubbleType.opacity\n      };\n      this.process(distMouse, timeSpent, opacityData);\n    }\n  };\n\n  Bubbler.prototype.hoverBubble = function () {\n    var container = this.container;\n    var particle = this.particle;\n    var mousePos = container.interactivity.mouse.position || {\n      x: 0,\n      y: 0\n    };\n    var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mousePos);\n    var ratio = 1 - distMouse / container.retina.bubbleModeDistance;\n\n    if (distMouse <= container.retina.bubbleModeDistance) {\n      if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n        this.hoverBubbleSize(ratio);\n        this.hoverBubbleOpacity(ratio);\n      }\n    } else {\n      this.init();\n    }\n\n    if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n      this.init();\n    }\n  };\n\n  Bubbler.prototype.hoverBubbleSize = function (ratio) {\n    var container = this.container;\n    var options = container.options;\n    var particle = this.particle;\n    var modeSize = options.interactivity.modes.bubble.size;\n    var optSize = options.particles.size.value;\n    var pSize = particle.radius;\n\n    if (container.retina.bubbleModeSize > container.retina.sizeValue) {\n      var size = pSize + modeSize * ratio;\n\n      if (size > pSize && size <= modeSize) {\n        this.radius = size;\n      }\n    } else if (container.retina.bubbleModeSize < container.retina.sizeValue) {\n      var size = pSize - (optSize - modeSize) * ratio;\n\n      if (size < pSize && size >= modeSize) {\n        this.radius = size;\n      }\n    }\n  };\n\n  Bubbler.prototype.hoverBubbleOpacity = function (ratio) {\n    var container = this.container;\n    var options = container.options;\n    var particle = this.particle;\n    var modeOpacity = options.interactivity.modes.bubble.opacity;\n    var optOpacity = options.particles.opacity.value;\n    var pOpacity = particle.opacity.value;\n\n    if (modeOpacity > optOpacity) {\n      var opacity = pOpacity + modeOpacity * ratio;\n\n      if (opacity > pOpacity && opacity <= modeOpacity) {\n        this.opacity = opacity;\n      }\n    } else if (modeOpacity < optOpacity) {\n      var opacity = pOpacity - (optOpacity - modeOpacity) * ratio;\n\n      if (opacity < pOpacity && opacity >= modeOpacity) {\n        this.opacity = opacity;\n      }\n    }\n  };\n\n  return Bubbler;\n}();\n\nexports.Bubbler = Bubbler;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/Front-end/node_modules/tsparticles/dist/Classes/Particle/Bubbler.js"],"names":["Object","defineProperty","exports","value","ProcessBubbleType_1","require","Utils_1","HoverMode_1","ClickMode_1","Constants_1","Bubbler","container","particle","prototype","bubble","options","hoverEnabled","interactivity","events","onHover","enable","hoverMode","mode","clickEnabled","onClick","clickMode","Utils","isInArray","HoverMode","hoverBubble","ClickMode","clickBubble","init","opacity","radius","process","distMouse","timeSpent","data","bubbleDuration","modes","duration","bubbleParam","bubbleObj","optValue","bubbleDistance","retina","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","type","durationEnd","obj","ProcessBubbleType","size","undefined","mouseClickPos","mouse","clickPosition","x","y","getDistanceBetweenCoordinates","position","Date","getTime","clickTime","clicking","sizeData","bubbleModeSize","sizeValue","opacityData","particles","mousePos","ratio","status","Constants","mouseMoveEvent","hoverBubbleSize","hoverBubbleOpacity","mouseLeaveEvent","modeSize","optSize","pSize","modeOpacity","optOpacity","pOpacity"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ProcessBubbleType_1 = require(\"../../Enums/ProcessBubbleType\");\nvar Utils_1 = require(\"../Utils/Utils\");\nvar HoverMode_1 = require(\"../../Enums/Modes/HoverMode\");\nvar ClickMode_1 = require(\"../../Enums/Modes/ClickMode\");\nvar Constants_1 = require(\"../Utils/Constants\");\nvar Bubbler = (function () {\n    function Bubbler(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    Bubbler.prototype.bubble = function () {\n        var container = this.container;\n        var options = container.options;\n        var hoverEnabled = options.interactivity.events.onHover.enable;\n        var hoverMode = options.interactivity.events.onHover.mode;\n        var clickEnabled = options.interactivity.events.onClick.enable;\n        var clickMode = options.interactivity.events.onClick.mode;\n        if (hoverEnabled && Utils_1.Utils.isInArray(HoverMode_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(ClickMode_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n    };\n    Bubbler.prototype.init = function () {\n        var particle = this.particle;\n        this.opacity = particle.opacity.value;\n        this.radius = particle.radius;\n    };\n    Bubbler.prototype.process = function (distMouse, timeSpent, data) {\n        var container = this.container;\n        var options = container.options;\n        var bubbleDuration = options.interactivity.modes.bubble.duration;\n        var bubbleParam = data.bubbleObj.optValue;\n        var bubbleDistance = container.retina.bubbleModeDistance;\n        var particlesParam = data.particlesObj.optValue;\n        var pObjBubble = data.bubbleObj.value;\n        var pObj = data.particlesObj.value || 0;\n        var type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        var value = pObj - (timeSpent * (pObj - bubbleParam) / bubbleDuration);\n                        if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                            this.radius = value;\n                        }\n                        if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                            this.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                        this.radius = undefined;\n                    }\n                    if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                        this.opacity = undefined;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                var value = bubbleParam * 2 - pObj - (timeSpent * (pObj - bubbleParam) / bubbleDuration);\n                if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                    this.radius = value;\n                }\n                if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                    this.opacity = value;\n                }\n            }\n        }\n    };\n    Bubbler.prototype.clickBubble = function () {\n        var container = this.container;\n        var options = container.options;\n        var particle = this.particle;\n        var mouseClickPos = container.interactivity.mouse.clickPosition || { x: 0, y: 0 };\n        var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mouseClickPos);\n        var timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n        if (container.bubble.clicking) {\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            var sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: this.radius,\n                },\n                particlesObj: {\n                    optValue: container.retina.sizeValue,\n                    value: this.particle.radius,\n                },\n                type: ProcessBubbleType_1.ProcessBubbleType.size,\n            };\n            this.process(distMouse, timeSpent, sizeData);\n            var opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: this.opacity,\n                },\n                particlesObj: {\n                    optValue: options.particles.opacity.value,\n                    value: this.particle.opacity.value,\n                },\n                type: ProcessBubbleType_1.ProcessBubbleType.opacity,\n            };\n            this.process(distMouse, timeSpent, opacityData);\n        }\n    };\n    Bubbler.prototype.hoverBubble = function () {\n        var container = this.container;\n        var particle = this.particle;\n        var mousePos = container.interactivity.mouse.position || {\n            x: 0,\n            y: 0,\n        };\n        var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mousePos);\n        var ratio = 1 - distMouse / container.retina.bubbleModeDistance;\n        if (distMouse <= container.retina.bubbleModeDistance) {\n            if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n                this.hoverBubbleSize(ratio);\n                this.hoverBubbleOpacity(ratio);\n            }\n        }\n        else {\n            this.init();\n        }\n        if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n            this.init();\n        }\n    };\n    Bubbler.prototype.hoverBubbleSize = function (ratio) {\n        var container = this.container;\n        var options = container.options;\n        var particle = this.particle;\n        var modeSize = options.interactivity.modes.bubble.size;\n        var optSize = options.particles.size.value;\n        var pSize = particle.radius;\n        if (container.retina.bubbleModeSize > container.retina.sizeValue) {\n            var size = pSize + modeSize * ratio;\n            if (size > pSize && size <= modeSize) {\n                this.radius = size;\n            }\n        }\n        else if (container.retina.bubbleModeSize < container.retina.sizeValue) {\n            var size = pSize - (optSize - modeSize) * ratio;\n            if (size < pSize && size >= modeSize) {\n                this.radius = size;\n            }\n        }\n    };\n    Bubbler.prototype.hoverBubbleOpacity = function (ratio) {\n        var container = this.container;\n        var options = container.options;\n        var particle = this.particle;\n        var modeOpacity = options.interactivity.modes.bubble.opacity;\n        var optOpacity = options.particles.opacity.value;\n        var pOpacity = particle.opacity.value;\n        if (modeOpacity > optOpacity) {\n            var opacity = pOpacity + modeOpacity * ratio;\n            if (opacity > pOpacity && opacity <= modeOpacity) {\n                this.opacity = opacity;\n            }\n        }\n        else if (modeOpacity < optOpacity) {\n            var opacity = pOpacity - (optOpacity - modeOpacity) * ratio;\n            if (opacity < pOpacity && opacity >= modeOpacity) {\n                this.opacity = opacity;\n            }\n        }\n    };\n    return Bubbler;\n}());\nexports.Bubbler = Bubbler;\n"]},"metadata":{},"sourceType":"script"}