{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Constants_1 = require(\"./Utils/Constants\");\n\nvar Utils_1 = require(\"./Utils/Utils\");\n\nvar CanvasUtils_1 = require(\"./Utils/CanvasUtils\");\n\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\n\nvar Canvas = function () {\n  function Canvas(container) {\n    this.container = container;\n    this.dimension = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  Canvas.prototype.init = function () {\n    this.size();\n    var container = this.container;\n    var options = container.options;\n    var cover = options.backgroundMask.cover;\n    var trail = options.particles.move.trail;\n    this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(cover.color !== undefined ? cover.color : options.backgroundMask.cover);\n    this.trailFillColor = typeof trail.fillColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(trail.fillColor) : ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n    this.paint();\n  };\n\n  Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Constants_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n    this.element = canvas;\n    this.dimension.height = canvas.offsetHeight;\n    this.dimension.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  };\n\n  Canvas.prototype.destroy = function () {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.dimension);\n    }\n  };\n\n  Canvas.prototype.size = function () {\n    if (this.element) {\n      this.element.width = this.dimension.width;\n      this.element.height = this.dimension.height;\n    }\n  };\n\n  Canvas.prototype.paint = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (this.context) {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        if (this.coverColor) {\n          this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n        } else {\n          this.paintBase();\n        }\n      } else {\n        this.paintBase();\n      }\n    }\n  };\n\n  Canvas.prototype.clear = function () {\n    var container = this.container;\n    var options = container.options;\n    var trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n    } else if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.dimension);\n    }\n  };\n\n  Canvas.prototype.isPointInPath = function (path, point) {\n    var _a, _b;\n\n    return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n  };\n\n  Canvas.prototype.drawPolygonMask = function () {\n    var container = this.container;\n    var options = container.options;\n    var context = this.context;\n    var polygonDraw = options.polygon.draw;\n    var polygon = container.polygon;\n    var rawData = polygon.raw;\n    var path = polygon.polygonPath;\n    var path2dSupported = polygon.path2DSupported;\n\n    if (context) {\n      if (path2dSupported && path && polygon.offset) {\n        CanvasUtils_1.CanvasUtils.drawPolygonMaskPath(context, path, polygonDraw.stroke, polygon.offset);\n      } else if (rawData) {\n        CanvasUtils_1.CanvasUtils.drawPolygonMask(context, rawData, polygonDraw.stroke);\n      }\n    }\n  };\n\n  Canvas.prototype.drawLinkedLine = function (p1, p2, pos1, pos2, opacity) {\n    var container = this.container;\n    var options = container.options;\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n\n    if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n      colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    } else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n      var sourceColor = p1.color;\n      var destColor = p2.color;\n      colorLine = {\n        b: Math.floor(Utils_1.Utils.mix(sourceColor.b, destColor.b, p1.radius, p2.radius)),\n        g: Math.floor(Utils_1.Utils.mix(sourceColor.g, destColor.g, p1.radius, p2.radius)),\n        r: Math.floor(Utils_1.Utils.mix(sourceColor.r, destColor.r, p1.radius, p2.radius))\n      };\n    } else {\n      colorLine = container.particles.lineLinkedColor;\n    }\n\n    var width = container.retina.lineLinkedWidth;\n    CanvasUtils_1.CanvasUtils.drawLineLinked(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, options.particles.lineLinked.shadow);\n  };\n\n  Canvas.prototype.drawConnectLine = function (p1, p2) {\n    var lineStyle = this.lineStyle(p1, p2);\n\n    if (!lineStyle) {\n      return;\n    }\n\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, this.container.retina.lineLinkedWidth, lineStyle, p1.position, p2.position);\n  };\n\n  Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n    var container = this.container;\n    var options = container.options;\n    var optColor = options.particles.lineLinked.color;\n    var lineColor = container.particles.lineLinkedColor || (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n\n    if (lineColor == Constants_1.Constants.randomColorValue) {\n      lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    }\n\n    container.particles.lineLinkedColor = lineColor;\n    var colorLine = {\n      r: 127,\n      g: 127,\n      b: 127\n    };\n    var ctx = container.canvas.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    if (container.particles.lineLinkedColor == Constants_1.Constants.randomColorValue) {\n      colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor() || colorLine;\n    } else {\n      colorLine = container.particles.lineLinkedColor || colorLine;\n    }\n\n    var beginPos = {\n      x: particle.position.x + particle.offset.x,\n      y: particle.position.y + particle.offset.y\n    };\n    CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n  };\n\n  Canvas.prototype.drawParticle = function (particle) {\n    var container = this.container;\n    var options = container.options;\n    var colorValue;\n    var radius = particle.bubbler.radius !== undefined ? particle.bubbler.radius : particle.radius;\n    var opacity = particle.bubbler.opacity !== undefined ? particle.bubbler.opacity : particle.opacity.value;\n\n    if (particle.color) {\n      colorValue = ColorUtils_1.ColorUtils.getStyleFromColor(particle.color, opacity);\n    }\n\n    if (!this.context || !colorValue) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawParticle(this.context, particle, colorValue, options.backgroundMask.enable, radius, opacity);\n  };\n\n  Canvas.prototype.paintBase = function (baseColor) {\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.paintBase(this.context, this.dimension, baseColor);\n    }\n  };\n\n  Canvas.prototype.lineStyle = function (p1, p2) {\n    var container = this.container;\n    var options = container.options;\n    var connectOptions = options.interactivity.modes.connect;\n\n    if (p1.color && p2.color) {\n      var sourceRgb = p1.color;\n      var destRgb = p2.color;\n      var midRgb = {\n        b: Utils_1.Utils.mix(sourceRgb.b, destRgb.b, p1.radius, p2.radius),\n        g: Utils_1.Utils.mix(sourceRgb.g, destRgb.g, p1.radius, p2.radius),\n        r: Utils_1.Utils.mix(sourceRgb.r, destRgb.r, p1.radius, p2.radius)\n      };\n\n      if (this.context) {\n        return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, midRgb, connectOptions.lineLinked.opacity);\n      }\n    }\n  };\n\n  Canvas.prototype.initBackground = function () {\n    var container = this.container;\n    var options = container.options;\n    var background = options.background;\n    var element = this.element;\n\n    if (!element) {\n      return;\n    }\n\n    var elementStyle = element.style;\n\n    if (background.color) {\n      var color = typeof background.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(background.color) : ColorUtils_1.ColorUtils.colorToRgb(background.color);\n\n      if (color) {\n        elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n      }\n    }\n\n    if (background.image) {\n      elementStyle.backgroundImage = background.image;\n    }\n\n    if (background.position) {\n      elementStyle.backgroundPosition = background.position;\n    }\n\n    if (background.repeat) {\n      elementStyle.backgroundRepeat = background.repeat;\n    }\n\n    if (background.size) {\n      elementStyle.backgroundSize = background.size;\n    }\n  };\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/Front-end/node_modules/tsparticles/dist/Classes/Canvas.js"],"names":["Object","defineProperty","exports","value","Constants_1","require","Utils_1","CanvasUtils_1","ColorUtils_1","Canvas","container","dimension","height","width","context","generatedCanvas","prototype","init","size","options","cover","backgroundMask","trail","particles","move","coverColor","ColorUtils","colorToRgb","color","undefined","trailFillColor","fillColor","stringToRgb","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","offsetHeight","offsetWidth","getContext","retina","initBackground","destroy","CanvasUtils","clear","enable","paintBase","getStyleFromColor","length","isPointInPath","path","point","_b","x","y","drawPolygonMask","polygonDraw","polygon","draw","rawData","raw","polygonPath","path2dSupported","path2DSupported","offset","drawPolygonMaskPath","stroke","drawLinkedLine","p1","p2","pos1","pos2","opacity","ctx","colorLine","lineLinkedColor","randomColorValue","getRandomRgbColor","sourceColor","destColor","b","Math","floor","Utils","mix","radius","g","r","lineLinkedWidth","drawLineLinked","lineLinked","shadow","drawConnectLine","lineStyle","position","drawGrabLine","particle","mousePos","optColor","lineColor","beginPos","drawParticle","colorValue","bubbler","baseColor","connectOptions","interactivity","modes","connect","sourceRgb","destRgb","midRgb","gradient","background","elementStyle","style","backgroundColor","image","backgroundImage","backgroundPosition","repeat","backgroundRepeat","backgroundSize"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants_1 = require(\"./Utils/Constants\");\nvar Utils_1 = require(\"./Utils/Utils\");\nvar CanvasUtils_1 = require(\"./Utils/CanvasUtils\");\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\nvar Canvas = (function () {\n    function Canvas(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    Canvas.prototype.init = function () {\n        this.size();\n        var container = this.container;\n        var options = container.options;\n        var cover = options.backgroundMask.cover;\n        var trail = options.particles.move.trail;\n        this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(cover.color !== undefined ?\n            cover.color :\n            options.backgroundMask.cover);\n        this.trailFillColor = typeof trail.fillColor === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(trail.fillColor) :\n            ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.paint();\n    };\n    Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Constants_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n        this.element = canvas;\n        this.dimension.height = canvas.offsetHeight;\n        this.dimension.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    };\n    Canvas.prototype.destroy = function () {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.dimension);\n        }\n    };\n    Canvas.prototype.size = function () {\n        if (this.element) {\n            this.element.width = this.dimension.width;\n            this.element.height = this.dimension.height;\n        }\n    };\n    Canvas.prototype.paint = function () {\n        var container = this.container;\n        var options = container.options;\n        if (this.context) {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                if (this.coverColor) {\n                    this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n                }\n                else {\n                    this.paintBase();\n                }\n            }\n            else {\n                this.paintBase();\n            }\n        }\n    };\n    Canvas.prototype.clear = function () {\n        var container = this.container;\n        var options = container.options;\n        var trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.dimension);\n        }\n    };\n    Canvas.prototype.isPointInPath = function (path, point) {\n        var _a, _b;\n        return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n    };\n    Canvas.prototype.drawPolygonMask = function () {\n        var container = this.container;\n        var options = container.options;\n        var context = this.context;\n        var polygonDraw = options.polygon.draw;\n        var polygon = container.polygon;\n        var rawData = polygon.raw;\n        var path = polygon.polygonPath;\n        var path2dSupported = polygon.path2DSupported;\n        if (context) {\n            if (path2dSupported && path && polygon.offset) {\n                CanvasUtils_1.CanvasUtils.drawPolygonMaskPath(context, path, polygonDraw.stroke, polygon.offset);\n            }\n            else if (rawData) {\n                CanvasUtils_1.CanvasUtils.drawPolygonMask(context, rawData, polygonDraw.stroke);\n            }\n        }\n    };\n    Canvas.prototype.drawLinkedLine = function (p1, p2, pos1, pos2, opacity) {\n        var container = this.container;\n        var options = container.options;\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n            colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n            var sourceColor = p1.color;\n            var destColor = p2.color;\n            colorLine = {\n                b: Math.floor(Utils_1.Utils.mix(sourceColor.b, destColor.b, p1.radius, p2.radius)),\n                g: Math.floor(Utils_1.Utils.mix(sourceColor.g, destColor.g, p1.radius, p2.radius)),\n                r: Math.floor(Utils_1.Utils.mix(sourceColor.r, destColor.r, p1.radius, p2.radius)),\n            };\n        }\n        else {\n            colorLine = container.particles.lineLinkedColor;\n        }\n        var width = container.retina.lineLinkedWidth;\n        CanvasUtils_1.CanvasUtils.drawLineLinked(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, options.particles.lineLinked.shadow);\n    };\n    Canvas.prototype.drawConnectLine = function (p1, p2) {\n        var lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, this.container.retina.lineLinkedWidth, lineStyle, p1.position, p2.position);\n    };\n    Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n        var container = this.container;\n        var options = container.options;\n        var optColor = options.particles.lineLinked.color;\n        var lineColor = container.particles.lineLinkedColor ||\n            (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n        if (lineColor == Constants_1.Constants.randomColorValue) {\n            lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        container.particles.lineLinkedColor = lineColor;\n        var colorLine = { r: 127, g: 127, b: 127 };\n        var ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        if (container.particles.lineLinkedColor == Constants_1.Constants.randomColorValue) {\n            colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor() || colorLine;\n        }\n        else {\n            colorLine = container.particles.lineLinkedColor || colorLine;\n        }\n        var beginPos = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n    };\n    Canvas.prototype.drawParticle = function (particle) {\n        var container = this.container;\n        var options = container.options;\n        var colorValue;\n        var radius = particle.bubbler.radius !== undefined ? particle.bubbler.radius : particle.radius;\n        var opacity = particle.bubbler.opacity !== undefined ? particle.bubbler.opacity : particle.opacity.value;\n        if (particle.color) {\n            colorValue = ColorUtils_1.ColorUtils.getStyleFromColor(particle.color, opacity);\n        }\n        if (!this.context || !colorValue) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawParticle(this.context, particle, colorValue, options.backgroundMask.enable, radius, opacity);\n    };\n    Canvas.prototype.paintBase = function (baseColor) {\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.paintBase(this.context, this.dimension, baseColor);\n        }\n    };\n    Canvas.prototype.lineStyle = function (p1, p2) {\n        var container = this.container;\n        var options = container.options;\n        var connectOptions = options.interactivity.modes.connect;\n        if (p1.color && p2.color) {\n            var sourceRgb = p1.color;\n            var destRgb = p2.color;\n            var midRgb = {\n                b: Utils_1.Utils.mix(sourceRgb.b, destRgb.b, p1.radius, p2.radius),\n                g: Utils_1.Utils.mix(sourceRgb.g, destRgb.g, p1.radius, p2.radius),\n                r: Utils_1.Utils.mix(sourceRgb.r, destRgb.r, p1.radius, p2.radius),\n            };\n            if (this.context) {\n                return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, midRgb, connectOptions.lineLinked.opacity);\n            }\n        }\n    };\n    Canvas.prototype.initBackground = function () {\n        var container = this.container;\n        var options = container.options;\n        var background = options.background;\n        var element = this.element;\n        if (!element) {\n            return;\n        }\n        var elementStyle = element.style;\n        if (background.color) {\n            var color = typeof background.color === \"string\" ?\n                ColorUtils_1.ColorUtils.stringToRgb(background.color) :\n                ColorUtils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n            }\n        }\n        if (background.image) {\n            elementStyle.backgroundImage = background.image;\n        }\n        if (background.position) {\n            elementStyle.backgroundPosition = background.position;\n        }\n        if (background.repeat) {\n            elementStyle.backgroundRepeat = background.repeat;\n        }\n        if (background.size) {\n            elementStyle.backgroundSize = background.size;\n        }\n    };\n    return Canvas;\n}());\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}