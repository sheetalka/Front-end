{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"../Utils/Utils\");\n\nvar Constants_1 = require(\"../Utils/Constants\");\n\nvar Grabber = function () {\n  function Grabber(container, particle) {\n    this.container = container;\n    this.particle = particle;\n  }\n\n  Grabber.prototype.grab = function () {\n    var container = this.container;\n    var options = container.options;\n    var particle = this.particle;\n    var interactivity = options.interactivity;\n\n    if (interactivity.events.onHover.enable && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n      var mousePos = container.interactivity.mouse.position || {\n        x: 0,\n        y: 0\n      };\n      var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mousePos);\n\n      if (distMouse <= container.retina.grabModeDistance) {\n        var lineOpacity = interactivity.modes.grab.lineLinked.opacity;\n        var grabDistance = container.retina.grabModeDistance;\n        var opacityLine = lineOpacity - distMouse * lineOpacity / grabDistance;\n\n        if (opacityLine > 0) {\n          container.canvas.drawGrabLine(particle, opacityLine, mousePos);\n        }\n      }\n    }\n  };\n\n  return Grabber;\n}();\n\nexports.Grabber = Grabber;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/Front-end/node_modules/tsparticles/dist/Classes/Particle/Grabber.js"],"names":["Object","defineProperty","exports","value","Utils_1","require","Constants_1","Grabber","container","particle","prototype","grab","options","interactivity","events","onHover","enable","status","Constants","mouseMoveEvent","mousePos","mouse","position","x","y","distMouse","Utils","getDistanceBetweenCoordinates","retina","grabModeDistance","lineOpacity","modes","lineLinked","opacity","grabDistance","opacityLine","canvas","drawGrabLine"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAIE,OAAO,GAAI,YAAY;AACvB,WAASA,OAAT,CAAiBC,SAAjB,EAA4BC,QAA5B,EAAsC;AAClC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDF,EAAAA,OAAO,CAACG,SAAR,CAAkBC,IAAlB,GAAyB,YAAY;AACjC,QAAIH,SAAS,GAAG,KAAKA,SAArB;AACA,QAAII,OAAO,GAAGJ,SAAS,CAACI,OAAxB;AACA,QAAIH,QAAQ,GAAG,KAAKA,QAApB;AACA,QAAII,aAAa,GAAGD,OAAO,CAACC,aAA5B;;AACA,QAAIA,aAAa,CAACC,MAAd,CAAqBC,OAArB,CAA6BC,MAA7B,IAAuCR,SAAS,CAACK,aAAV,CAAwBI,MAAxB,KAAmCX,WAAW,CAACY,SAAZ,CAAsBC,cAApG,EAAoH;AAChH,UAAIC,QAAQ,GAAGZ,SAAS,CAACK,aAAV,CAAwBQ,KAAxB,CAA8BC,QAA9B,IAA0C;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAzD;AACA,UAAIC,SAAS,GAAGrB,OAAO,CAACsB,KAAR,CAAcC,6BAAd,CAA4ClB,QAAQ,CAACa,QAArD,EAA+DF,QAA/D,CAAhB;;AACA,UAAIK,SAAS,IAAIjB,SAAS,CAACoB,MAAV,CAAiBC,gBAAlC,EAAoD;AAChD,YAAIC,WAAW,GAAGjB,aAAa,CAACkB,KAAd,CAAoBpB,IAApB,CAAyBqB,UAAzB,CAAoCC,OAAtD;AACA,YAAIC,YAAY,GAAG1B,SAAS,CAACoB,MAAV,CAAiBC,gBAApC;AACA,YAAIM,WAAW,GAAGL,WAAW,GAAIL,SAAS,GAAGK,WAAb,GAA4BI,YAA5D;;AACA,YAAIC,WAAW,GAAG,CAAlB,EAAqB;AACjB3B,UAAAA,SAAS,CAAC4B,MAAV,CAAiBC,YAAjB,CAA8B5B,QAA9B,EAAwC0B,WAAxC,EAAqDf,QAArD;AACH;AACJ;AACJ;AACJ,GAjBD;;AAkBA,SAAOb,OAAP;AACH,CAxBc,EAAf;;AAyBAL,OAAO,CAACK,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Utils_1 = require(\"../Utils/Utils\");\nvar Constants_1 = require(\"../Utils/Constants\");\nvar Grabber = (function () {\n    function Grabber(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    Grabber.prototype.grab = function () {\n        var container = this.container;\n        var options = container.options;\n        var particle = this.particle;\n        var interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n            var mousePos = container.interactivity.mouse.position || { x: 0, y: 0 };\n            var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mousePos);\n            if (distMouse <= container.retina.grabModeDistance) {\n                var lineOpacity = interactivity.modes.grab.lineLinked.opacity;\n                var grabDistance = container.retina.grabModeDistance;\n                var opacityLine = lineOpacity - (distMouse * lineOpacity) / grabDistance;\n                if (opacityLine > 0) {\n                    container.canvas.drawGrabLine(particle, opacityLine, mousePos);\n                }\n            }\n        }\n    };\n    return Grabber;\n}());\nexports.Grabber = Grabber;\n"]},"metadata":{},"sourceType":"script"}