{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sheetal\\\\Desktop\\\\Front-end\\\\src\\\\Components\\\\Groupchat\\\\Groupchat.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport chat from \"../lib/chat\";\nimport config from \"../config\";\n\nclass Groupchat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = () => {\n      chat.sendGroupMessage(this.GUID, this.state.messageText).then(message => {\n        console.log(\"Message sent successfully:\", message);\n        this.setState({\n          messageText: null\n        });\n      }, error => {\n        if (error.code === \"ERR_NOT_A_MEMBER\") {\n          chat.joinGroup(this.GUID).then(response => {\n            this.sendMessage();\n          });\n        }\n      });\n    };\n\n    this.scrollToBottom = () => {\n      const chat = document.getElementById(\"chatList\");\n      chat.scrollTop = chat.scrollHeight;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.sendMessage();\n      event.target.reset();\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        messageText: event.target.value\n      });\n    };\n\n    this.getUser = () => {\n      chat.getLoggedinUser().then(user => {\n        console.log(\"user details:\", {\n          user\n        });\n        this.setState({\n          user\n        });\n      }).catch(({\n        error\n      }) => {\n        if (error.code === \"USER_NOT_LOGED_IN\") {\n          this.setState({\n            isAuthenticated: false\n          });\n        }\n      });\n    };\n\n    this.messageListener = () => {\n      chat.addMessageListener((data, error) => {\n        if (error) return console.log(`error: ${error}`);\n        this.setState(prevState => ({\n          groupMessage: [...prevState.groupMessage, data]\n        }), () => {\n          this.scrollToBottom();\n        });\n      });\n    };\n\n    this.state = {\n      receiverID: \"\",\n      messageText: null,\n      groupMessage: [],\n      user: {},\n      isAuthenticated: true\n    };\n    this.GUID = config.GUID;\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.messageListener(); // chat.joinGroup(this.GUID)\n  }\n\n  render() {\n    const {\n      isAuthenticated\n    } = this.state;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatWindow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"chat\",\n      id: \"chatList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, this.state.groupMessage.map(data => /*#__PURE__*/React.createElement(\"div\", {\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, this.state.user.uid === data.sender.uid ? /*#__PURE__*/React.createElement(\"li\", {\n      className: \"self\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, data.sender.uid), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \" \", data.data.text))) : /*#__PURE__*/React.createElement(\"li\", {\n      className: \"other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, data.sender.uid), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }\n    }, \" \", data.data.text, \" \")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"textarea input\",\n      type: \"text\",\n      placeholder: \"Enter your message...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Groupchat;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/Front-end/src/Components/Groupchat/Groupchat.js"],"names":["React","Redirect","chat","config","Groupchat","Component","constructor","props","sendMessage","sendGroupMessage","GUID","state","messageText","then","message","console","log","setState","error","code","joinGroup","response","scrollToBottom","document","getElementById","scrollTop","scrollHeight","handleSubmit","event","preventDefault","target","reset","handleChange","value","getUser","getLoggedinUser","user","catch","isAuthenticated","messageListener","addMessageListener","data","prevState","groupMessage","receiverID","componentDidMount","render","map","id","uid","sender","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport chat from \"../lib/chat\";\r\nimport config from \"../config\";\r\nclass Groupchat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\nthis.state = {\r\n      receiverID: \"\",\r\n      messageText: null,\r\n      groupMessage: [],\r\n      user: {},\r\n      isAuthenticated: true\r\n    };\r\nthis.GUID = config.GUID;\r\n  }\r\nsendMessage = () => {\r\n    chat.sendGroupMessage(this.GUID, this.state.messageText).then(\r\n      message => {\r\n        console.log(\"Message sent successfully:\", message);\r\n        this.setState({ messageText: null });\r\n      },\r\n      error => {\r\n        if (error.code === \"ERR_NOT_A_MEMBER\") {\r\n          chat.joinGroup(this.GUID).then(response => {\r\n            this.sendMessage();\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\nscrollToBottom = () => {\r\n    const chat = document.getElementById(\"chatList\");\r\n    chat.scrollTop = chat.scrollHeight;\r\n  };\r\nhandleSubmit = event => {\r\n    event.preventDefault();\r\n    this.sendMessage();\r\n    event.target.reset();\r\n  };\r\nhandleChange = event => {\r\n    this.setState({ messageText: event.target.value });\r\n  };\r\ngetUser = () => {\r\n    chat\r\n      .getLoggedinUser()\r\n      .then(user => {\r\n        console.log(\"user details:\", { user });\r\n        this.setState({ user });\r\n      })\r\n      .catch(({ error }) => {\r\n        if (error.code === \"USER_NOT_LOGED_IN\") {\r\n          this.setState({\r\n            isAuthenticated: false\r\n          });\r\n        }\r\n      });\r\n  };\r\nmessageListener = () => {\r\n    chat.addMessageListener((data, error) => {\r\n      if (error) return console.log(`error: ${error}`);\r\n      this.setState(\r\n        prevState => ({\r\n          groupMessage: [...prevState.groupMessage, data]\r\n        }),\r\n        () => {\r\n          this.scrollToBottom();\r\n        }\r\n      );\r\n    });\r\n  };\r\ncomponentDidMount() {\r\n    this.getUser();\r\n    this.messageListener();\r\n    // chat.joinGroup(this.GUID)\r\n  }\r\nrender() {\r\n    const { isAuthenticated } = this.state;\r\n    if (!isAuthenticated) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"chatWindow\">\r\n        <ul className=\"chat\" id=\"chatList\">\r\n          {this.state.groupMessage.map(data => (\r\n            <div key={data.id}>\r\n              {this.state.user.uid === data.sender.uid ? (\r\n                <li className=\"self\">\r\n                  <div className=\"msg\">\r\n                    <p>{data.sender.uid}</p>\r\n                    <div className=\"message\"> {data.data.text}</div>\r\n                  </div>\r\n                </li>\r\n              ) : (\r\n                <li className=\"other\">\r\n                  <div className=\"msg\">\r\n                    <p>{data.sender.uid}</p>\r\n                   <div className=\"message\"> {data.data.text} </div>\r\n                  </div>\r\n                </li>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </ul>\r\n        <div className=\"chatInputWrapper\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              className=\"textarea input\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your message...\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Groupchat;"]},"metadata":{},"sourceType":"module"}