{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sheetal\\\\Desktop\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'b205a72957fd4e149860d8e93897b669'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          imageUrl: data.imageUrl,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:4002/image', {\n            method: 'post',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id,\n              imageUrl: this.state.imageUrl\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  //TRY\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 6\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 8\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/facerecognition/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","imageUrl","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app=new Clarifai.App({\n  apiKey: 'b205a72957fd4e149860d8e93897b669'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:'',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user:{\n        id:'',\n      name:'',\n      email:'',\n      entries: 0,\n      joined: ''\n\n      }\n    }\n  }\n  loadUser = (data)=>{\n    this.setState({user:{\n       id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      imageUrl: data.imageUrl,\n      joined: data.joined\n    }})\n  }\n  calculateFaceLocation=(data)=>{\n    const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box;\n   const image=document.getElementById('inputimage');\n   const width=Number(image.width);\n   const height=Number(image.height);\n   return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row *height,\n    rightCol: width - (clarifaiFace.right_col *width),\n    bottomRow:height-(clarifaiFace.bottom_row*height)\n   }\n}\ndisplayFaceBox=(box)=>{\n  this.setState({box:box});\n}\nonInputChange=(event)=>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit=()=>{\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,\n     this.state.input)\n    .then(response=>\n      {\n        if(response){\n          fetch('http://localhost:4002/image',{\n             method:'post',\n             headers: {'Content-type':'application/json'},\n             body: JSON.stringify({\n             id: this.state.user.id,\n             imageUrl:this.state.imageUrl\n            })\n          })\n          .then(response=>response.json())\n          .then(count=>{\n            this.setState(Object.assign(this.state.user,\n              {entries:count})) \n          })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n     .catch(err=>console.log(err));\n  }\n  onRouteChange=(route)=>{\n    if(route==='signout'){\n      this.setState({isSignedIn:false})\n    }else if(route==='home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route:route});\n  }\n  //TRY\n\n  render() {\n  return (\n    <div className=\"App\">\n      <Particles className='particles'\n       params={particlesOptions}\n       />\n     <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n     {this.state.route==='home'\n     ? \n     <div>\n     <Logo />\n     <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n     <ImageLinkForm onInputChange={this.onInputChange} \n     onButtonSubmit={this.onButtonSubmit}\n     />\n     <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n     </div>\n     :(\n       this.state.route==='signin'\n       ?\n       <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n       :\n       <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n       )\n      }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}