{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Particle_1 = require(\"./Particle\");\n\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\n\nvar PolygonMaskInlineArrangement_1 = require(\"../Enums/PolygonMaskInlineArrangement\");\n\nvar Particles = function () {\n  function Particles(container) {\n    this.container = container;\n    this.array = [];\n    this.interactionsEnabled = false;\n  }\n\n  Object.defineProperty(Particles.prototype, \"count\", {\n    get: function () {\n      return this.array.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Particles.prototype.init = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline && (options.polygon.inline.arrangement === PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.onePerPoint || options.polygon.inline.arrangement === PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.perPoint)) {\n      container.polygon.drawPointsOnPolygonPath();\n    } else {\n      for (var i = this.array.length; i < options.particles.number.value; i++) {\n        this.addParticle(new Particle_1.Particle(container));\n      }\n    }\n\n    this.interactionsEnabled = options.particles.lineLinked.enable || options.particles.move.attract.enable || options.particles.move.collisions;\n  };\n\n  Particles.prototype.redraw = function () {\n    this.clear();\n    this.init();\n    this.draw(0);\n  };\n\n  Particles.prototype.removeAt = function (index, quantity) {\n    if (index >= 0 && index <= this.count) {\n      this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1);\n    }\n  };\n\n  Particles.prototype.remove = function (particle) {\n    this.removeAt(this.array.indexOf(particle));\n  };\n\n  Particles.prototype.update = function (delta) {\n    for (var i = 0; i < this.array.length; i++) {\n      var p = this.array[i];\n      p.update(i, delta);\n\n      if (this.interactionsEnabled) {\n        for (var j = i + 1; j < this.array.length; j++) {\n          var p2 = this.array[j];\n          p.interact(p2);\n        }\n      }\n    }\n  };\n\n  Particles.prototype.draw = function (delta) {\n    var container = this.container;\n    var options = container.options;\n    container.canvas.clear();\n    this.update(delta);\n\n    if (options.polygon.enable && options.polygon.draw.enable) {\n      container.polygon.drawPolygon();\n    }\n\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var p = _a[_i];\n      p.draw();\n    }\n  };\n\n  Particles.prototype.clear = function () {\n    this.array = [];\n  };\n\n  Particles.prototype.push = function (nb, mousePosition) {\n    var _a;\n\n    var container = this.container;\n    var options = container.options;\n    this.pushing = true;\n\n    if (options.particles.number.limit > 0) {\n      if (this.array.length + nb > options.particles.number.limit) {\n        this.removeQuantity(this.array.length + nb - options.particles.number.limit);\n      }\n    }\n\n    var pos;\n\n    if (mousePosition) {\n      pos = (_a = mousePosition.position) !== null && _a !== void 0 ? _a : {\n        x: 0,\n        y: 0\n      };\n    }\n\n    for (var i = 0; i < nb; i++) {\n      this.addParticle(new Particle_1.Particle(container, pos));\n    }\n\n    if (!options.particles.move.enable) {\n      this.container.play();\n    }\n\n    this.pushing = false;\n  };\n\n  Particles.prototype.addParticle = function (particle) {\n    this.array.push(particle);\n  };\n\n  Particles.prototype.removeQuantity = function (quantity) {\n    var container = this.container;\n    var options = container.options;\n    this.removeAt(0, quantity);\n\n    if (!options.particles.move.enable) {\n      this.container.play();\n    }\n  };\n\n  return Particles;\n}();\n\nexports.Particles = Particles;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/Front-end/node_modules/tsparticles/dist/Classes/Particles.js"],"names":["Object","defineProperty","exports","value","Particle_1","require","PolygonMaskType_1","PolygonMaskInlineArrangement_1","Particles","container","array","interactionsEnabled","prototype","get","length","enumerable","configurable","init","options","polygon","enable","type","PolygonMaskType","inline","arrangement","PolygonMaskInlineArrangement","onePerPoint","perPoint","drawPointsOnPolygonPath","i","particles","number","addParticle","Particle","lineLinked","move","attract","collisions","redraw","clear","draw","removeAt","index","quantity","count","splice","remove","particle","indexOf","update","delta","p","j","p2","interact","canvas","drawPolygon","_i","_a","push","nb","mousePosition","pushing","limit","removeQuantity","pos","position","x","y","play"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Particle_1 = require(\"./Particle\");\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\nvar PolygonMaskInlineArrangement_1 = require(\"../Enums/PolygonMaskInlineArrangement\");\nvar Particles = (function () {\n    function Particles(container) {\n        this.container = container;\n        this.array = [];\n        this.interactionsEnabled = false;\n    }\n    Object.defineProperty(Particles.prototype, \"count\", {\n        get: function () {\n            return this.array.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Particles.prototype.init = function () {\n        var container = this.container;\n        var options = container.options;\n        if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline &&\n            (options.polygon.inline.arrangement === PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.onePerPoint ||\n                options.polygon.inline.arrangement === PolygonMaskInlineArrangement_1.PolygonMaskInlineArrangement.perPoint)) {\n            container.polygon.drawPointsOnPolygonPath();\n        }\n        else {\n            for (var i = this.array.length; i < options.particles.number.value; i++) {\n                this.addParticle(new Particle_1.Particle(container));\n            }\n        }\n        this.interactionsEnabled = options.particles.lineLinked.enable ||\n            options.particles.move.attract.enable ||\n            options.particles.move.collisions;\n    };\n    Particles.prototype.redraw = function () {\n        this.clear();\n        this.init();\n        this.draw(0);\n    };\n    Particles.prototype.removeAt = function (index, quantity) {\n        if (index >= 0 && index <= this.count) {\n            this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1);\n        }\n    };\n    Particles.prototype.remove = function (particle) {\n        this.removeAt(this.array.indexOf(particle));\n    };\n    Particles.prototype.update = function (delta) {\n        for (var i = 0; i < this.array.length; i++) {\n            var p = this.array[i];\n            p.update(i, delta);\n            if (this.interactionsEnabled) {\n                for (var j = i + 1; j < this.array.length; j++) {\n                    var p2 = this.array[j];\n                    p.interact(p2);\n                }\n            }\n        }\n    };\n    Particles.prototype.draw = function (delta) {\n        var container = this.container;\n        var options = container.options;\n        container.canvas.clear();\n        this.update(delta);\n        if (options.polygon.enable && options.polygon.draw.enable) {\n            container.polygon.drawPolygon();\n        }\n        for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n            var p = _a[_i];\n            p.draw();\n        }\n    };\n    Particles.prototype.clear = function () {\n        this.array = [];\n    };\n    Particles.prototype.push = function (nb, mousePosition) {\n        var _a;\n        var container = this.container;\n        var options = container.options;\n        this.pushing = true;\n        if (options.particles.number.limit > 0) {\n            if ((this.array.length + nb) > options.particles.number.limit) {\n                this.removeQuantity((this.array.length + nb) - options.particles.number.limit);\n            }\n        }\n        var pos;\n        if (mousePosition) {\n            pos = (_a = mousePosition.position) !== null && _a !== void 0 ? _a : { x: 0, y: 0 };\n        }\n        for (var i = 0; i < nb; i++) {\n            this.addParticle(new Particle_1.Particle(container, pos));\n        }\n        if (!options.particles.move.enable) {\n            this.container.play();\n        }\n        this.pushing = false;\n    };\n    Particles.prototype.addParticle = function (particle) {\n        this.array.push(particle);\n    };\n    Particles.prototype.removeQuantity = function (quantity) {\n        var container = this.container;\n        var options = container.options;\n        this.removeAt(0, quantity);\n        if (!options.particles.move.enable) {\n            this.container.play();\n        }\n    };\n    return Particles;\n}());\nexports.Particles = Particles;\n"]},"metadata":{},"sourceType":"script"}