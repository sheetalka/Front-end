{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Connecter = function () {\n  function Connecter(container, particle) {\n    this.container = container;\n    this.particle = particle;\n  }\n\n  Connecter.prototype.connect = function (destParticle) {\n    var container = this.container;\n    var options = container.options;\n    var particle = this.particle;\n\n    if (options.interactivity.events.onHover.enable && container.interactivity.status == 'mousemove') {\n      var xDiff = Math.abs(particle.position.x - destParticle.position.x);\n      var yDiff = Math.abs(particle.position.y - destParticle.position.y);\n      var mousePos = container.interactivity.mouse.position || {\n        x: 0,\n        y: 0\n      };\n      var xCoreDiff = Math.abs(particle.position.x - mousePos.x);\n      var yCoreDiff = Math.abs(particle.position.y - mousePos.y);\n      var distMax = Math.abs(container.retina.connectModeDistance);\n      var connectAreaRadius = Math.abs(container.retina.connectModeRadius);\n\n      if (xDiff < distMax && yDiff < distMax && xCoreDiff < connectAreaRadius && yCoreDiff < connectAreaRadius) {\n        container.canvas.drawConnectLine(particle, destParticle);\n      }\n    }\n  };\n\n  return Connecter;\n}();\n\nexports.Connecter = Connecter;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/facerecognition/node_modules/tsparticles/dist/Classes/Particle/Connecter.js"],"names":["Object","defineProperty","exports","value","Connecter","container","particle","prototype","connect","destParticle","options","interactivity","events","onHover","enable","status","xDiff","Math","abs","position","x","yDiff","y","mousePos","mouse","xCoreDiff","yCoreDiff","distMax","retina","connectModeDistance","connectAreaRadius","connectModeRadius","canvas","drawConnectLine"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,SAAS,GAAI,YAAY;AACzB,WAASA,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwC;AACpC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDF,EAAAA,SAAS,CAACG,SAAV,CAAoBC,OAApB,GAA8B,UAAUC,YAAV,EAAwB;AAClD,QAAIJ,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIK,OAAO,GAAGL,SAAS,CAACK,OAAxB;AACA,QAAIJ,QAAQ,GAAG,KAAKA,QAApB;;AACA,QAAII,OAAO,CAACC,aAAR,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqCC,MAArC,IAA+CT,SAAS,CAACM,aAAV,CAAwBI,MAAxB,IAAkC,WAArF,EAAkG;AAC9F,UAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASZ,QAAQ,CAACa,QAAT,CAAkBC,CAAlB,GAAsBX,YAAY,CAACU,QAAb,CAAsBC,CAArD,CAAZ;AACA,UAAIC,KAAK,GAAGJ,IAAI,CAACC,GAAL,CAASZ,QAAQ,CAACa,QAAT,CAAkBG,CAAlB,GAAsBb,YAAY,CAACU,QAAb,CAAsBG,CAArD,CAAZ;AACA,UAAIC,QAAQ,GAAGlB,SAAS,CAACM,aAAV,CAAwBa,KAAxB,CAA8BL,QAA9B,IAA0C;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQE,QAAAA,CAAC,EAAE;AAAX,OAAzD;AACA,UAAIG,SAAS,GAAGR,IAAI,CAACC,GAAL,CAASZ,QAAQ,CAACa,QAAT,CAAkBC,CAAlB,GAAsBG,QAAQ,CAACH,CAAxC,CAAhB;AACA,UAAIM,SAAS,GAAGT,IAAI,CAACC,GAAL,CAASZ,QAAQ,CAACa,QAAT,CAAkBG,CAAlB,GAAsBC,QAAQ,CAACD,CAAxC,CAAhB;AACA,UAAIK,OAAO,GAAGV,IAAI,CAACC,GAAL,CAASb,SAAS,CAACuB,MAAV,CAAiBC,mBAA1B,CAAd;AACA,UAAIC,iBAAiB,GAAGb,IAAI,CAACC,GAAL,CAASb,SAAS,CAACuB,MAAV,CAAiBG,iBAA1B,CAAxB;;AACA,UAAIf,KAAK,GAAGW,OAAR,IAAmBN,KAAK,GAAGM,OAA3B,IAAsCF,SAAS,GAAGK,iBAAlD,IAAuEJ,SAAS,GAAGI,iBAAvF,EAA0G;AACtGzB,QAAAA,SAAS,CAAC2B,MAAV,CAAiBC,eAAjB,CAAiC3B,QAAjC,EAA2CG,YAA3C;AACH;AACJ;AACJ,GAhBD;;AAiBA,SAAOL,SAAP;AACH,CAvBgB,EAAjB;;AAwBAF,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Connecter = (function () {\n    function Connecter(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    Connecter.prototype.connect = function (destParticle) {\n        var container = this.container;\n        var options = container.options;\n        var particle = this.particle;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status == 'mousemove') {\n            var xDiff = Math.abs(particle.position.x - destParticle.position.x);\n            var yDiff = Math.abs(particle.position.y - destParticle.position.y);\n            var mousePos = container.interactivity.mouse.position || { x: 0, y: 0 };\n            var xCoreDiff = Math.abs(particle.position.x - mousePos.x);\n            var yCoreDiff = Math.abs(particle.position.y - mousePos.y);\n            var distMax = Math.abs(container.retina.connectModeDistance);\n            var connectAreaRadius = Math.abs(container.retina.connectModeRadius);\n            if (xDiff < distMax && yDiff < distMax && xCoreDiff < connectAreaRadius && yCoreDiff < connectAreaRadius) {\n                container.canvas.drawConnectLine(particle, destParticle);\n            }\n        }\n    };\n    return Connecter;\n}());\nexports.Connecter = Connecter;\n"]},"metadata":{},"sourceType":"script"}