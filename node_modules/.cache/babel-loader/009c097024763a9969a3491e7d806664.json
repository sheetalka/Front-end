{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\n\nvar Utils_1 = require(\"../Utils/Utils\");\n\nvar Constants_1 = require(\"../Utils/Constants\");\n\nvar Linker = function () {\n  function Linker(container, particle) {\n    this.container = container;\n    this.particle = particle;\n  }\n\n  Linker.prototype.link = function (p2) {\n    var container = this.container;\n    var options = container.options;\n    var particle = this.particle;\n    var pos1 = {\n      x: particle.position.x + particle.offset.x,\n      y: particle.position.y + particle.offset.y\n    };\n    var pos2 = {\n      x: p2.position.x + p2.offset.x,\n      y: p2.position.y + p2.offset.y\n    };\n    var dist = Utils_1.Utils.getDistanceBetweenCoordinates(pos1, pos2);\n    var optOpacity = options.particles.lineLinked.opacity;\n    var optDistance = container.retina.lineLinkedDistance;\n\n    if (dist <= optDistance) {\n      var opacityLine = optOpacity - dist * optOpacity / optDistance;\n\n      if (opacityLine > 0) {\n        if (!container.particles.lineLinkedColor) {\n          var color = options.particles.lineLinked.color;\n\n          if (color === Constants_1.Constants.randomColorValue) {\n            if (options.particles.lineLinked.consent) {\n              container.particles.lineLinkedColor = ColorUtils_1.ColorUtils.stringToRgb(color);\n            } else if (options.particles.lineLinked.blink) {\n              container.particles.lineLinkedColor = Constants_1.Constants.randomColorValue;\n            } else {\n              container.particles.lineLinkedColor = \"mid\";\n            }\n          } else {\n            container.particles.lineLinkedColor = typeof color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(color) : ColorUtils_1.ColorUtils.colorToRgb(color);\n          }\n        }\n\n        container.canvas.drawLinkedLine(particle, p2, pos1, pos2, opacityLine);\n      }\n    }\n  };\n\n  return Linker;\n}();\n\nexports.Linker = Linker;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/Front-end/node_modules/tsparticles/dist/Classes/Particle/Linker.js"],"names":["Object","defineProperty","exports","value","ColorUtils_1","require","Utils_1","Constants_1","Linker","container","particle","prototype","link","p2","options","pos1","x","position","offset","y","pos2","dist","Utils","getDistanceBetweenCoordinates","optOpacity","particles","lineLinked","opacity","optDistance","retina","lineLinkedDistance","opacityLine","lineLinkedColor","color","Constants","randomColorValue","consent","ColorUtils","stringToRgb","blink","colorToRgb","canvas","drawLinkedLine"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\nvar Utils_1 = require(\"../Utils/Utils\");\nvar Constants_1 = require(\"../Utils/Constants\");\nvar Linker = (function () {\n    function Linker(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    Linker.prototype.link = function (p2) {\n        var container = this.container;\n        var options = container.options;\n        var particle = this.particle;\n        var pos1 = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        var pos2 = {\n            x: p2.position.x + p2.offset.x,\n            y: p2.position.y + p2.offset.y,\n        };\n        var dist = Utils_1.Utils.getDistanceBetweenCoordinates(pos1, pos2);\n        var optOpacity = options.particles.lineLinked.opacity;\n        var optDistance = container.retina.lineLinkedDistance;\n        if (dist <= optDistance) {\n            var opacityLine = optOpacity - (dist * optOpacity) / optDistance;\n            if (opacityLine > 0) {\n                if (!container.particles.lineLinkedColor) {\n                    var color = options.particles.lineLinked.color;\n                    if (color === Constants_1.Constants.randomColorValue) {\n                        if (options.particles.lineLinked.consent) {\n                            container.particles.lineLinkedColor = ColorUtils_1.ColorUtils.stringToRgb(color);\n                        }\n                        else if (options.particles.lineLinked.blink) {\n                            container.particles.lineLinkedColor = Constants_1.Constants.randomColorValue;\n                        }\n                        else {\n                            container.particles.lineLinkedColor = \"mid\";\n                        }\n                    }\n                    else {\n                        container.particles.lineLinkedColor = typeof color === \"string\" ?\n                            ColorUtils_1.ColorUtils.stringToRgb(color) :\n                            ColorUtils_1.ColorUtils.colorToRgb(color);\n                    }\n                }\n                container.canvas.drawLinkedLine(particle, p2, pos1, pos2, opacityLine);\n            }\n        }\n    };\n    return Linker;\n}());\nexports.Linker = Linker;\n"]},"metadata":{},"sourceType":"script"}