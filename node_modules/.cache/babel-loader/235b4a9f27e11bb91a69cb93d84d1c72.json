{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Bubbler_1 = require(\"./Particle/Bubbler\");\n\nvar Drawer_1 = require(\"./Particle/Drawer\");\n\nvar Grabber_1 = require(\"./Particle/Grabber\");\n\nvar Repulser_1 = require(\"./Particle/Repulser\");\n\nvar ShapeType_1 = require(\"../Enums/ShapeType\");\n\nvar Updater_1 = require(\"./Particle/Updater\");\n\nvar Utils_1 = require(\"./Utils/Utils\");\n\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\n\nvar Connecter_1 = require(\"./Particle/Connecter\");\n\nvar InteractionManager_1 = require(\"./Particle/InteractionManager\");\n\nvar HoverMode_1 = require(\"../Enums/Modes/HoverMode\");\n\nvar ClickMode_1 = require(\"../Enums/Modes/ClickMode\");\n\nvar RotateDirection_1 = require(\"../Enums/RotateDirection\");\n\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\n\nvar Particle = function () {\n  function Particle(container, position) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n\n    this.container = container;\n    var options = container.options;\n    var color = options.particles.color;\n    this.size = {};\n    this.angle = options.particles.rotate.random ? Math.random() * 360 : options.particles.rotate.value;\n\n    if (options.particles.rotate.direction == RotateDirection_1.RotateDirection.random) {\n      var index = Math.floor(Math.random() * 2);\n\n      if (index > 0) {\n        this.rotateDirection = RotateDirection_1.RotateDirection.counterClockwise;\n      } else {\n        this.rotateDirection = RotateDirection_1.RotateDirection.clockwise;\n      }\n    } else {\n      this.rotateDirection = options.particles.rotate.direction;\n    }\n\n    var randomSize = options.particles.size.random;\n    var sizeValue = container.retina.sizeValue;\n    this.radius = randomSize.enable ? Utils_1.Utils.randomInRange(randomSize.minimumValue, sizeValue) : sizeValue;\n\n    if (options.particles.size.animation.enable) {\n      this.size.status = false;\n      this.size.velocity = container.retina.sizeAnimationSpeed / 100;\n\n      if (!options.particles.size.animation.sync) {\n        this.size.velocity = this.size.velocity * Math.random();\n      }\n    }\n\n    if (options.particles.rotate.animation.enable) {\n      if (!options.particles.rotate.animation.sync) {\n        this.angle = Math.random() * 360;\n      }\n    }\n\n    this.position = this.calcPosition(this.container, position);\n\n    if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n      this.initialPosition = {\n        x: this.position.x,\n        y: this.position.y\n      };\n    }\n\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n\n    if (options.particles.move.collisions) {\n      this.checkOverlap(position);\n    }\n\n    if (color instanceof Array) {\n      this.color = ColorUtils_1.ColorUtils.colorToRgb(Utils_1.Utils.itemFromArray(color));\n    } else {\n      this.color = ColorUtils_1.ColorUtils.colorToRgb(color);\n    }\n\n    var randomOpacity = options.particles.opacity.random;\n    var opacityValue = options.particles.opacity.value;\n    this.opacity = {\n      value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue\n    };\n\n    if (options.particles.opacity.animation.enable) {\n      this.opacity.status = false;\n      this.opacity.velocity = options.particles.opacity.animation.speed / 100;\n\n      if (!options.particles.opacity.animation.sync) {\n        this.opacity.velocity *= Math.random();\n      }\n    }\n\n    this.initialVelocity = Particle.calculateVelocity(options);\n    this.velocity = {\n      horizontal: this.initialVelocity.horizontal,\n      vertical: this.initialVelocity.vertical\n    };\n    this.fill = true;\n    this.close = true;\n    var shapeType = options.particles.shape.type;\n\n    if (shapeType instanceof Array) {\n      this.shape = Utils_1.Utils.itemFromArray(shapeType);\n    } else {\n      this.shape = shapeType;\n    }\n\n    if (this.shape === ShapeType_1.ShapeType.image) {\n      var shape = options.particles.shape;\n      var index = Utils_1.Utils.arrayRandomIndex(container.images);\n      var image = container.images[index];\n      var optionsImage = shape.image instanceof Array ? shape.image[index] : shape.image;\n      this.image = {\n        data: image,\n        ratio: optionsImage.width / optionsImage.height,\n        replaceColor: optionsImage.replaceColor,\n        src: optionsImage.src\n      };\n\n      if (!this.image.ratio) {\n        this.image.ratio = 1;\n      }\n\n      this.fill = (_a = optionsImage.fill) !== null && _a !== void 0 ? _a : this.fill;\n      this.close = (_b = optionsImage.close) !== null && _b !== void 0 ? _b : this.close;\n    }\n\n    if (this.shape === ShapeType_1.ShapeType.polygon) {\n      if (options.particles.shape.polygon instanceof Array) {\n        this.polygon = Utils_1.Utils.itemFromArray(options.particles.shape.polygon);\n      } else {\n        this.polygon = options.particles.shape.polygon;\n      }\n\n      this.fill = (_c = this.polygon.fill) !== null && _c !== void 0 ? _c : this.fill;\n      this.close = (_d = this.polygon.close) !== null && _d !== void 0 ? _d : this.close;\n    }\n\n    if (options.particles.stroke instanceof Array) {\n      this.stroke = Utils_1.Utils.itemFromArray(options.particles.stroke);\n    } else {\n      this.stroke = options.particles.stroke;\n    }\n\n    this.strokeColor = typeof this.stroke.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(this.stroke.color) : ColorUtils_1.ColorUtils.colorToRgb(this.stroke.color);\n    this.shadowColor = typeof options.particles.shadow.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(options.particles.shadow.color) : ColorUtils_1.ColorUtils.colorToRgb(options.particles.shadow.color);\n\n    if (this.shape === ShapeType_1.ShapeType.char || this.shape === ShapeType_1.ShapeType.character) {\n      if (options.particles.shape.character instanceof Array) {\n        this.character = Utils_1.Utils.itemFromArray(options.particles.shape.character);\n      } else {\n        this.character = options.particles.shape.character;\n      }\n\n      var value = this.character.value;\n      this.text = value instanceof Array ? Utils_1.Utils.itemFromArray(value) : value;\n      this.fill = (_e = this.character.fill) !== null && _e !== void 0 ? _e : this.fill;\n      this.close = (_f = this.character.close) !== null && _f !== void 0 ? _f : this.close;\n    }\n\n    var shapeData = options.particles.shape.custom[this.shape];\n\n    if (shapeData) {\n      this.shapeData = shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData;\n      this.fill = (_g = this.shapeData.fill) !== null && _g !== void 0 ? _g : this.fill;\n      this.close = (_h = this.shapeData.close) !== null && _h !== void 0 ? _h : this.close;\n    }\n\n    this.updater = new Updater_1.Updater(this.container, this);\n    this.bubbler = new Bubbler_1.Bubbler(this.container, this);\n    this.repulser = new Repulser_1.Repulser(this.container, this);\n    this.drawer = new Drawer_1.Drawer(this.container, this);\n    this.grabber = new Grabber_1.Grabber(this.container, this);\n    this.connecter = new Connecter_1.Connecter(this.container, this);\n    this.interactionManager = new InteractionManager_1.InteractionManager(this.container, this);\n  }\n\n  Particle.calculateVelocity = function (options) {\n    var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(options);\n    var res = {\n      horizontal: 0,\n      vertical: 0\n    };\n\n    if (options.particles.move.straight) {\n      res.horizontal = baseVelocity.x;\n      res.vertical = baseVelocity.y;\n\n      if (options.particles.move.random) {\n        res.horizontal *= Math.random();\n        res.vertical *= Math.random();\n      }\n    } else {\n      res.horizontal = baseVelocity.x + Math.random() - 0.5;\n      res.vertical = baseVelocity.y + Math.random() - 0.5;\n    }\n\n    return res;\n  };\n\n  Particle.prototype.resetVelocity = function () {\n    var container = this.container;\n    var options = container.options;\n    var velocity = Particle.calculateVelocity(options);\n    this.velocity.horizontal = velocity.horizontal;\n    this.velocity.vertical = velocity.vertical;\n  };\n\n  Particle.prototype.update = function (index, delta) {\n    var container = this.container;\n    var options = container.options;\n    this.updater.update(delta);\n    var hoverMode = options.interactivity.events.onHover.mode;\n    var clickMode = options.interactivity.events.onClick.mode;\n\n    if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.grab, hoverMode)) {\n      this.grabber.grab();\n    }\n\n    if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.connect, options.interactivity.events.onHover.mode)) {\n      for (var j = index + 1; j < container.particles.count; j++) {\n        var p2 = container.particles.array[j];\n        this.connecter.connect(p2);\n      }\n    }\n\n    if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(ClickMode_1.ClickMode.bubble, clickMode)) {\n      this.bubbler.bubble();\n    }\n\n    if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(ClickMode_1.ClickMode.repulse, clickMode)) {\n      this.repulser.repulse();\n    }\n  };\n\n  Particle.prototype.interact = function (p2) {\n    this.interactionManager.interact(p2);\n  };\n\n  Particle.prototype.draw = function () {\n    this.drawer.draw();\n  };\n\n  Particle.prototype.isOverlapping = function () {\n    var container = this.container;\n    var p = this;\n    var collisionFound = false;\n    var iterations = 0;\n\n    for (var _i = 0, _a = container.particles.array.filter(function (t) {\n      return t != p;\n    }); _i < _a.length; _i++) {\n      var p2 = _a[_i];\n      iterations++;\n      var dist = Utils_1.Utils.getDistanceBetweenCoordinates(p.position, p2.position);\n\n      if (dist <= p.radius + p2.radius) {\n        collisionFound = true;\n        break;\n      }\n    }\n\n    return {\n      collisionFound: collisionFound,\n      iterations: iterations\n    };\n  };\n\n  Particle.prototype.checkOverlap = function (position) {\n    var container = this.container;\n    var p = this;\n    var overlapResult = p.isOverlapping();\n\n    if (overlapResult.iterations >= container.particles.count) {\n      container.particles.remove(this);\n    } else if (overlapResult.collisionFound) {\n      p.position.x = position ? position.x : Math.random() * container.canvas.dimension.width;\n      p.position.y = position ? position.y : Math.random() * container.canvas.dimension.height;\n      p.checkOverlap();\n    }\n  };\n\n  Particle.prototype.calcPosition = function (container, position) {\n    var _a, _b;\n\n    var pos = {\n      x: 0,\n      y: 0\n    };\n    var options = container.options;\n\n    if (options.polygon.enable && ((_b = (_a = container.polygon.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n      if (position) {\n        pos.x = position.x;\n        pos.y = position.y;\n      } else {\n        var randomPoint = container.polygon.randomPointInPolygon();\n        pos.x = randomPoint.x;\n        pos.y = randomPoint.y;\n      }\n    } else {\n      pos.x = position ? position.x : Math.random() * container.canvas.dimension.width;\n      pos.y = position ? position.y : Math.random() * container.canvas.dimension.height;\n\n      if (pos.x > container.canvas.dimension.width - this.radius * 2) {\n        pos.x -= this.radius;\n      } else if (pos.x < this.radius * 2) {\n        pos.x += this.radius;\n      }\n\n      if (pos.y > container.canvas.dimension.height - this.radius * 2) {\n        pos.y -= this.radius;\n      } else if (pos.y < this.radius * 2) {\n        pos.y += this.radius;\n      }\n    }\n\n    return pos;\n  };\n\n  return Particle;\n}();\n\nexports.Particle = Particle;","map":{"version":3,"sources":["C:/Users/Sheetal/Desktop/Front-end/node_modules/tsparticles/dist/Classes/Particle.js"],"names":["Object","defineProperty","exports","value","Bubbler_1","require","Drawer_1","Grabber_1","Repulser_1","ShapeType_1","Updater_1","Utils_1","PolygonMaskType_1","Connecter_1","InteractionManager_1","HoverMode_1","ClickMode_1","RotateDirection_1","ColorUtils_1","Particle","container","position","_a","_b","_c","_d","_e","_f","_g","_h","options","color","particles","size","angle","rotate","random","Math","direction","RotateDirection","index","floor","rotateDirection","counterClockwise","clockwise","randomSize","sizeValue","retina","radius","enable","Utils","randomInRange","minimumValue","animation","status","velocity","sizeAnimationSpeed","sync","calcPosition","polygon","type","PolygonMaskType","inline","initialPosition","x","y","offset","move","collisions","checkOverlap","Array","ColorUtils","colorToRgb","itemFromArray","randomOpacity","opacity","opacityValue","speed","initialVelocity","calculateVelocity","horizontal","vertical","fill","close","shapeType","shape","ShapeType","image","arrayRandomIndex","images","optionsImage","data","ratio","width","height","replaceColor","src","stroke","strokeColor","stringToRgb","shadowColor","shadow","char","character","text","shapeData","custom","updater","Updater","bubbler","Bubbler","repulser","Repulser","drawer","Drawer","grabber","Grabber","connecter","Connecter","interactionManager","InteractionManager","baseVelocity","getParticleBaseVelocity","res","straight","prototype","resetVelocity","update","delta","hoverMode","interactivity","events","onHover","mode","clickMode","onClick","isInArray","HoverMode","grab","connect","j","count","p2","array","bubble","ClickMode","repulse","interact","draw","isOverlapping","p","collisionFound","iterations","_i","filter","t","length","dist","getDistanceBetweenCoordinates","overlapResult","remove","canvas","dimension","pos","raw","randomPoint","randomPointInPolygon"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Bubbler_1 = require(\"./Particle/Bubbler\");\nvar Drawer_1 = require(\"./Particle/Drawer\");\nvar Grabber_1 = require(\"./Particle/Grabber\");\nvar Repulser_1 = require(\"./Particle/Repulser\");\nvar ShapeType_1 = require(\"../Enums/ShapeType\");\nvar Updater_1 = require(\"./Particle/Updater\");\nvar Utils_1 = require(\"./Utils/Utils\");\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\nvar Connecter_1 = require(\"./Particle/Connecter\");\nvar InteractionManager_1 = require(\"./Particle/InteractionManager\");\nvar HoverMode_1 = require(\"../Enums/Modes/HoverMode\");\nvar ClickMode_1 = require(\"../Enums/Modes/ClickMode\");\nvar RotateDirection_1 = require(\"../Enums/RotateDirection\");\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\nvar Particle = (function () {\n    function Particle(container, position) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.container = container;\n        var options = container.options;\n        var color = options.particles.color;\n        this.size = {};\n        this.angle = options.particles.rotate.random ? Math.random() * 360 : options.particles.rotate.value;\n        if (options.particles.rotate.direction == RotateDirection_1.RotateDirection.random) {\n            var index = Math.floor(Math.random() * 2);\n            if (index > 0) {\n                this.rotateDirection = RotateDirection_1.RotateDirection.counterClockwise;\n            }\n            else {\n                this.rotateDirection = RotateDirection_1.RotateDirection.clockwise;\n            }\n        }\n        else {\n            this.rotateDirection = options.particles.rotate.direction;\n        }\n        var randomSize = options.particles.size.random;\n        var sizeValue = container.retina.sizeValue;\n        this.radius = randomSize.enable ? Utils_1.Utils.randomInRange(randomSize.minimumValue, sizeValue) : sizeValue;\n        if (options.particles.size.animation.enable) {\n            this.size.status = false;\n            this.size.velocity = container.retina.sizeAnimationSpeed / 100;\n            if (!options.particles.size.animation.sync) {\n                this.size.velocity = this.size.velocity * Math.random();\n            }\n        }\n        if (options.particles.rotate.animation.enable) {\n            if (!options.particles.rotate.animation.sync) {\n                this.angle = Math.random() * 360;\n            }\n        }\n        this.position = this.calcPosition(this.container, position);\n        if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n            this.initialPosition = {\n                x: this.position.x,\n                y: this.position.y,\n            };\n        }\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (options.particles.move.collisions) {\n            this.checkOverlap(position);\n        }\n        if (color instanceof Array) {\n            this.color = ColorUtils_1.ColorUtils.colorToRgb(Utils_1.Utils.itemFromArray(color));\n        }\n        else {\n            this.color = ColorUtils_1.ColorUtils.colorToRgb(color);\n        }\n        var randomOpacity = options.particles.opacity.random;\n        var opacityValue = options.particles.opacity.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        if (options.particles.opacity.animation.enable) {\n            this.opacity.status = false;\n            this.opacity.velocity = options.particles.opacity.animation.speed / 100;\n            if (!options.particles.opacity.animation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.initialVelocity = Particle.calculateVelocity(options);\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        this.fill = true;\n        this.close = true;\n        var shapeType = options.particles.shape.type;\n        if (shapeType instanceof Array) {\n            this.shape = Utils_1.Utils.itemFromArray(shapeType);\n        }\n        else {\n            this.shape = shapeType;\n        }\n        if (this.shape === ShapeType_1.ShapeType.image) {\n            var shape = options.particles.shape;\n            var index = Utils_1.Utils.arrayRandomIndex(container.images);\n            var image = container.images[index];\n            var optionsImage = shape.image instanceof Array ? shape.image[index] : shape.image;\n            this.image = {\n                data: image,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: optionsImage.replaceColor,\n                src: optionsImage.src,\n            };\n            if (!this.image.ratio) {\n                this.image.ratio = 1;\n            }\n            this.fill = (_a = optionsImage.fill) !== null && _a !== void 0 ? _a : this.fill;\n            this.close = (_b = optionsImage.close) !== null && _b !== void 0 ? _b : this.close;\n        }\n        if (this.shape === ShapeType_1.ShapeType.polygon) {\n            if (options.particles.shape.polygon instanceof Array) {\n                this.polygon = Utils_1.Utils.itemFromArray(options.particles.shape.polygon);\n            }\n            else {\n                this.polygon = options.particles.shape.polygon;\n            }\n            this.fill = (_c = this.polygon.fill) !== null && _c !== void 0 ? _c : this.fill;\n            this.close = (_d = this.polygon.close) !== null && _d !== void 0 ? _d : this.close;\n        }\n        if (options.particles.stroke instanceof Array) {\n            this.stroke = Utils_1.Utils.itemFromArray(options.particles.stroke);\n        }\n        else {\n            this.stroke = options.particles.stroke;\n        }\n        this.strokeColor = typeof this.stroke.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(this.stroke.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(this.stroke.color);\n        this.shadowColor = typeof options.particles.shadow.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(options.particles.shadow.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(options.particles.shadow.color);\n        if (this.shape === ShapeType_1.ShapeType.char || this.shape === ShapeType_1.ShapeType.character) {\n            if (options.particles.shape.character instanceof Array) {\n                this.character = Utils_1.Utils.itemFromArray(options.particles.shape.character);\n            }\n            else {\n                this.character = options.particles.shape.character;\n            }\n            var value = this.character.value;\n            this.text = value instanceof Array ? Utils_1.Utils.itemFromArray(value) : value;\n            this.fill = (_e = this.character.fill) !== null && _e !== void 0 ? _e : this.fill;\n            this.close = (_f = this.character.close) !== null && _f !== void 0 ? _f : this.close;\n        }\n        var shapeData = options.particles.shape.custom[this.shape];\n        if (shapeData) {\n            this.shapeData = shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData;\n            this.fill = (_g = this.shapeData.fill) !== null && _g !== void 0 ? _g : this.fill;\n            this.close = (_h = this.shapeData.close) !== null && _h !== void 0 ? _h : this.close;\n        }\n        this.updater = new Updater_1.Updater(this.container, this);\n        this.bubbler = new Bubbler_1.Bubbler(this.container, this);\n        this.repulser = new Repulser_1.Repulser(this.container, this);\n        this.drawer = new Drawer_1.Drawer(this.container, this);\n        this.grabber = new Grabber_1.Grabber(this.container, this);\n        this.connecter = new Connecter_1.Connecter(this.container, this);\n        this.interactionManager = new InteractionManager_1.InteractionManager(this.container, this);\n    }\n    Particle.calculateVelocity = function (options) {\n        var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(options);\n        var res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        if (options.particles.move.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (options.particles.move.random) {\n                res.horizontal *= Math.random();\n                res.vertical *= Math.random();\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Math.random() - 0.5;\n            res.vertical = baseVelocity.y + Math.random() - 0.5;\n        }\n        return res;\n    };\n    Particle.prototype.resetVelocity = function () {\n        var container = this.container;\n        var options = container.options;\n        var velocity = Particle.calculateVelocity(options);\n        this.velocity.horizontal = velocity.horizontal;\n        this.velocity.vertical = velocity.vertical;\n    };\n    Particle.prototype.update = function (index, delta) {\n        var container = this.container;\n        var options = container.options;\n        this.updater.update(delta);\n        var hoverMode = options.interactivity.events.onHover.mode;\n        var clickMode = options.interactivity.events.onClick.mode;\n        if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.grab, hoverMode)) {\n            this.grabber.grab();\n        }\n        if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.connect, options.interactivity.events.onHover.mode)) {\n            for (var j = index + 1; j < container.particles.count; j++) {\n                var p2 = container.particles.array[j];\n                this.connecter.connect(p2);\n            }\n        }\n        if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(ClickMode_1.ClickMode.bubble, clickMode)) {\n            this.bubbler.bubble();\n        }\n        if (Utils_1.Utils.isInArray(HoverMode_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(ClickMode_1.ClickMode.repulse, clickMode)) {\n            this.repulser.repulse();\n        }\n    };\n    Particle.prototype.interact = function (p2) {\n        this.interactionManager.interact(p2);\n    };\n    Particle.prototype.draw = function () {\n        this.drawer.draw();\n    };\n    Particle.prototype.isOverlapping = function () {\n        var container = this.container;\n        var p = this;\n        var collisionFound = false;\n        var iterations = 0;\n        for (var _i = 0, _a = container.particles.array.filter(function (t) { return t != p; }); _i < _a.length; _i++) {\n            var p2 = _a[_i];\n            iterations++;\n            var dist = Utils_1.Utils.getDistanceBetweenCoordinates(p.position, p2.position);\n            if (dist <= p.radius + p2.radius) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return {\n            collisionFound: collisionFound,\n            iterations: iterations,\n        };\n    };\n    Particle.prototype.checkOverlap = function (position) {\n        var container = this.container;\n        var p = this;\n        var overlapResult = p.isOverlapping();\n        if (overlapResult.iterations >= container.particles.count) {\n            container.particles.remove(this);\n        }\n        else if (overlapResult.collisionFound) {\n            p.position.x = position ? position.x : Math.random() * container.canvas.dimension.width;\n            p.position.y = position ? position.y : Math.random() * container.canvas.dimension.height;\n            p.checkOverlap();\n        }\n    };\n    Particle.prototype.calcPosition = function (container, position) {\n        var _a, _b;\n        var pos = { x: 0, y: 0 };\n        var options = container.options;\n        if (options.polygon.enable && ((_b = (_a = container.polygon.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n            if (position) {\n                pos.x = position.x;\n                pos.y = position.y;\n            }\n            else {\n                var randomPoint = container.polygon.randomPointInPolygon();\n                pos.x = randomPoint.x;\n                pos.y = randomPoint.y;\n            }\n        }\n        else {\n            pos.x = position ? position.x : Math.random() * container.canvas.dimension.width;\n            pos.y = position ? position.y : Math.random() * container.canvas.dimension.height;\n            if (pos.x > container.canvas.dimension.width - this.radius * 2) {\n                pos.x -= this.radius;\n            }\n            else if (pos.x < this.radius * 2) {\n                pos.x += this.radius;\n            }\n            if (pos.y > container.canvas.dimension.height - this.radius * 2) {\n                pos.y -= this.radius;\n            }\n            else if (pos.y < this.radius * 2) {\n                pos.y += this.radius;\n            }\n        }\n        return pos;\n    };\n    return Particle;\n}());\nexports.Particle = Particle;\n"]},"metadata":{},"sourceType":"script"}